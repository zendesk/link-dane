%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.11.1 (Build 15B42) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 885 200
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 885 200
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.2 0.2 0.2 sc
q
835.05609 40.37561 m
835.05609 8.9853659 l
835.05609 6.1317072 834.63293 4.0975609 833.78778 2.8817074 c
832.94147 1.6682926 831.25122 1.0585365 828.71588 1.0585365 c
824.43414 1.0585365 l
823.48413 2.0097561 l
823.48413 112.50976 l
824.43414 113.46098 l
828.55609 113.46098 l
831.09271 113.46098 832.80975 112.8 833.70978 111.47927 c
834.60608 110.15732 835.05609 108.01585 835.05609 105.05854 c
835.05609 104.26585 l
841.39758 111.34512 848.95367 114.88659 857.72681 114.88659 c
866.70978 114.88659 873.47437 111.26585 878.02075 104.02805 c
882.56342 96.787804 884.83661 86.77195 884.83661 73.985367 c
884.83661 67.747559 884.01709 62.146343 882.38049 57.180489 c
880.74023 52.210976 878.57562 48.010975 875.88049 44.576828 c
873.18536 41.141464 870.09387 38.497562 866.60486 36.650002 c
863.11829 34.802441 859.52319 33.87561 855.8244 33.87561 c
848.5329 33.87561 841.60852 36.040245 835.05609 40.37561 c
835.05609 40.37561 l
h
835.05609 91.868294 m
835.05609 51.018291 l
841.47803 46.246342 847.5293 43.863415 853.21222 43.863415 c
858.89392 43.863415 863.57806 46.404877 867.26099 51.492683 c
870.94513 56.578049 872.789 64.259758 872.789 74.540245 c
872.789 79.62561 872.33905 84.048782 871.44635 87.812195 c
870.55121 91.571953 869.36707 94.698784 867.89392 97.19146 c
866.41949 99.680489 864.711 101.53536 862.76343 102.75488 c
860.81586 103.97317 858.73779 104.58292 856.5293 104.58292 c
852.31708 104.58292 848.31708 103.46829 844.5293 101.2439 c
840.73901 99.019516 837.58295 95.892685 835.05609 91.868294 c
835.05609 91.868294 l
h
835.05609 91.868294 m
W*
0 0 885 200 rc
818.48413 119.88659 m
889.83661 119.88659 l
889.83661 -3.9414635 l
818.48413 -3.9414635 l
h
f
Q
q
805.25366 44.339024 m
811.91217 44.339024 l
812.33173 43.373169 812.62561 42.297562 812.7829 41.115852 c
812.94147 39.935368 813.02075 38.862194 813.02075 37.896343 c
813.02075 37.251221 812.9939 36.741463 812.94147 36.364635 c
812.8866 35.987804 812.86218 35.691463 812.86218 35.47805 c
811.17072 35.156097 809.5329 34.889023 807.94879 34.673172 c
806.36218 34.459755 804.77686 34.351219 803.19147 34.351219 c
798.85608 34.351219 795.20978 35.326828 792.25366 37.284145 c
789.29266 39.237804 787.81342 42.69878 787.81342 47.667072 c
787.81342 150.71585 l
788.76465 151.66829 l
793.0451 151.66829 l
795.58173 151.66829 797.27197 151.06219 798.11829 149.84756 c
798.96222 148.63292 799.3866 146.60243 799.3866 143.75366 c
799.3866 51.146343 l
799.3866 46.607319 801.34149 44.339024 805.25366 44.339024 c
W*
0 0 885 200 rc
782.81342 156.66829 m
818.02075 156.66829 l
818.02075 29.351219 l
782.81342 29.351219 l
h
f
Q
q
773.54755 70.497559 m
724.40125 70.497559 l
724.92804 52.528049 731.74512 43.54512 744.8512 43.54512 c
752.03778 43.54512 759.70001 45.765854 767.83905 50.20488 c
770.16339 48.089024 771.59027 45.393902 772.12073 42.119511 c
763.45245 36.19878 753.73047 33.241463 742.95001 33.241463 c
737.45245 33.241463 732.74878 34.27195 728.83905 36.332928 c
724.92804 38.393902 721.72925 41.247562 719.24756 44.893902 c
716.76343 48.540245 714.94025 52.845123 713.7793 57.814632 c
712.61462 62.781708 712.03412 68.223167 712.03412 74.143906 c
712.03412 80.168289 712.74756 85.663414 714.17438 90.631706 c
715.6012 95.597565 717.68781 99.879265 720.43781 103.47317 c
723.18414 107.06464 726.48657 109.86585 730.34631 111.87561 c
734.20245 113.88171 738.61462 114.88659 743.58295 114.88659 c
748.44391 114.88659 752.80365 114.01585 756.66339 112.27195 c
760.51953 110.52805 763.74268 108.15 766.33417 105.13659 c
768.92194 102.12561 770.90369 98.530487 772.2793 94.357315 c
773.65125 90.180489 774.33905 85.717072 774.33905 80.960976 c
774.33905 79.05854 774.26099 77.235367 774.10242 75.491463 c
773.94391 73.747559 773.75732 72.082924 773.54755 70.497559 c
773.54755 70.497559 l
h
724.40125 79.534149 m
762.29022 79.534149 l
762.29022 81.595123 l
762.29022 88.887802 760.76221 94.753662 757.70978 99.19146 c
754.65851 103.63171 750.08051 105.85122 743.97803 105.85122 c
737.97803 105.85122 733.3183 103.47317 730.00488 98.717072 c
726.69025 93.960976 724.82196 87.564636 724.40125 79.534149 c
724.40125 79.534149 l
h
724.40125 79.534149 m
W*
0 0 885 200 rc
707.03412 119.88659 m
779.33905 119.88659 l
779.33905 28.241463 l
707.03412 28.241463 l
h
f
Q
q
696.65851 89.363411 m
696.65851 50.20488 l
696.65851 44.180489 697.29266 39.686584 698.56097 36.729267 c
696.76343 35.040245 694.28052 34.192684 691.10974 34.192684 c
687.09149 34.192684 685.08661 36.781708 685.08661 41.960976 c
685.08661 85.717072 l
685.08661 92.162193 684.23779 96.735367 682.54877 99.430489 c
680.8573 102.12561 677.89636 103.47317 673.67072 103.47317 c
669.44147 103.47317 665.05609 102.33537 660.51221 100.06464 c
655.9671 97.790245 652.16217 94.857315 649.09753 91.264633 c
649.09753 35.143902 l
647.51221 34.826828 645.55609 34.668293 643.23169 34.668293 c
641.01221 34.668293 639.10974 34.826828 637.52563 35.143902 c
637.52563 150.71585 l
638.47559 151.66829 l
642.75732 151.66829 l
645.29266 151.66829 646.98169 151.05975 647.82928 149.84512 c
648.67438 148.62927 649.09753 146.59512 649.09753 143.74147 c
649.09753 102.83903 l
652.68903 106.21951 656.91827 108.96707 661.78052 111.08171 c
666.64148 113.19634 671.50366 114.25366 676.36584 114.25366 c
683.44635 114.25366 688.59753 111.95488 691.82318 107.35732 c
695.0451 102.75976 696.65851 96.759758 696.65851 89.363411 c
W*
0 0 885 200 rc
632.52563 156.66829 m
703.56097 156.66829 l
703.56097 29.192682 l
632.52563 29.192682 l
h
f
Q
q
620.24512 89.52195 m
620.24512 50.20488 l
620.24512 44.180489 620.82318 39.686584 621.98779 36.729267 c
620.29633 35.040245 617.81219 34.192684 614.53656 34.192684 c
610.51831 34.192684 608.51343 36.781708 608.51343 41.960976 c
608.51343 85.87561 l
608.51343 92.321953 607.71948 96.893906 606.13416 99.589027 c
604.54999 102.28415 601.53656 103.63171 597.09753 103.63171 c
592.86829 103.63171 588.48291 102.4939 583.93903 100.22317 c
579.39392 97.948784 575.58783 95.017075 572.52441 91.424393 c
572.52441 35.143902 l
570.93903 34.826828 568.98169 34.668293 566.65851 34.668293 c
564.33295 34.668293 562.37805 34.826828 560.79388 35.143902 c
560.79388 112.50976 l
561.7439 113.46098 l
566.18414 113.46098 l
568.7207 113.46098 570.40851 112.8 571.2561 111.47927 c
572.1012 110.15732 572.52441 108.07073 572.52441 105.21707 c
572.52441 102.99634 l
576.11584 106.37926 580.34509 109.1 585.20734 111.16219 c
590.0683 113.22317 594.93048 114.25366 599.79266 114.25366 c
606.87317 114.25366 612.05243 111.97927 615.32928 107.43658 c
618.60486 102.89146 620.24512 96.918289 620.24512 89.52195 c
W*
0 0 885 200 rc
555.79388 119.25366 m
626.98779 119.25366 l
626.98779 29.192682 l
555.79388 29.192682 l
h
f
Q
q
546.05121 70.497559 m
496.90488 70.497559 l
497.4317 52.528049 504.24878 43.54512 517.35486 43.54512 c
524.54144 43.54512 532.20367 45.765854 540.34271 50.20488 c
542.66705 48.089024 544.09387 45.393902 544.62439 42.119511 c
535.95612 36.19878 526.23413 33.241463 515.45367 33.241463 c
509.95609 33.241463 505.25244 34.27195 501.3439 36.332928 c
497.4317 38.393902 494.23416 41.247562 491.75122 44.893902 c
489.26706 48.540245 487.44391 52.845123 486.28293 57.814632 c
485.11829 62.781708 484.53781 68.223167 484.53781 74.143906 c
484.53781 80.168289 485.25122 85.663414 486.67804 90.631706 c
488.10489 95.597565 490.19147 99.879265 492.94147 103.47317 c
495.68781 107.06464 498.99023 109.86585 502.85001 111.87561 c
506.70609 113.88171 511.11829 114.88659 516.08661 114.88659 c
520.94757 114.88659 525.30731 114.01585 529.16705 112.27195 c
533.02319 110.52805 536.24634 108.15 538.83783 105.13659 c
541.4256 102.12561 543.40729 98.530487 544.7829 94.357315 c
546.15491 90.180489 546.84271 85.717072 546.84271 80.960976 c
546.84271 79.05854 546.76465 77.235367 546.60608 75.491463 c
546.44757 73.747559 546.26221 72.082924 546.05121 70.497559 c
546.05121 70.497559 l
h
496.90488 79.534149 m
534.79388 79.534149 l
534.79388 81.595123 l
534.79388 88.887802 533.26587 94.753662 530.21344 99.19146 c
527.16217 103.63171 522.58417 105.85122 516.48169 105.85122 c
510.48172 105.85122 505.82196 103.47317 502.50854 98.717072 c
499.19391 93.960976 497.32562 87.564636 496.90488 79.534149 c
496.90488 79.534149 l
h
496.90488 79.534149 m
W*
0 0 885 200 rc
479.53781 119.88659 m
551.84271 119.88659 l
551.84271 28.241463 l
479.53781 28.241463 l
h
f
Q
q
426.04025 40.37561 m
426.04025 8.9853659 l
426.04025 6.1317072 425.61707 4.0975609 424.77194 2.8817074 c
423.92438 1.6682926 422.23416 1.0585365 419.69879 1.0585365 c
415.4183 1.0585365 l
414.46707 2.0097561 l
414.46707 112.50976 l
415.4183 113.46098 l
419.54025 113.46098 l
422.07684 113.46098 423.79391 112.8 424.69269 111.47927 c
425.58902 110.15732 426.04025 108.01585 426.04025 105.05854 c
426.04025 104.26585 l
432.38171 111.34512 439.93658 114.88659 448.70975 114.88659 c
457.69391 114.88659 464.45853 111.26585 469.00366 104.02805 c
473.54755 96.787804 475.82074 86.77195 475.82074 73.985367 c
475.82074 67.747559 475.00122 62.146343 473.3634 57.180489 c
471.7244 52.210976 469.55853 48.010975 466.8634 44.576828 c
464.1683 41.141464 461.07684 38.497562 457.58902 36.650002 c
454.10123 34.802441 450.5061 33.87561 446.80853 33.87561 c
439.51584 33.87561 432.59268 36.040245 426.04025 40.37561 c
426.04025 40.37561 l
h
426.04025 91.868294 m
426.04025 51.018291 l
432.46097 46.246342 438.51221 43.863415 444.19513 43.863415 c
449.87683 43.863415 454.56097 46.404877 458.24512 51.492683 c
461.92804 56.578049 463.77194 64.259758 463.77194 74.540245 c
463.77194 79.62561 463.32318 84.048782 462.42926 87.812195 c
461.53537 91.571953 460.35001 94.698784 458.87683 97.19146 c
457.40244 99.680489 455.69391 101.53536 453.74634 102.75488 c
451.79999 103.97317 449.72073 104.58292 447.51221 104.58292 c
443.30121 104.58292 439.30121 103.46829 435.51221 101.2439 c
431.72318 99.019516 428.56708 95.892685 426.04025 91.868294 c
426.04025 91.868294 l
h
426.04025 91.868294 m
W*
0 0 885 200 rc
409.46707 119.88659 m
480.82074 119.88659 l
480.82074 -3.9414635 l
409.46707 -3.9414635 l
h
f
Q
q
393.22318 41.643902 m
387.62073 36.040245 380.32684 33.241463 371.34512 33.241463 c
366.05853 33.241463 361.38171 34.247562 357.31464 36.253658 c
353.24512 38.260975 349.80975 41.034145 347.00977 44.576828 c
344.20853 48.117073 342.09512 52.396343 340.6683 57.418293 c
339.24146 62.436584 338.52805 67.960976 338.52805 73.985367 c
338.52805 80.009758 339.24146 85.530487 340.6683 90.551216 c
342.09512 95.571953 344.20853 99.879265 347.00977 103.47317 c
349.80975 107.06464 353.24512 109.86585 357.31464 111.87561 c
361.38171 113.88171 366.05853 114.88659 371.34512 114.88659 c
376.62927 114.88659 381.30609 113.88171 385.37561 111.87561 c
389.44391 109.86585 392.87927 107.06464 395.68048 103.47317 c
398.47928 99.879265 400.62073 95.571953 402.10123 90.551216 c
403.58047 85.530487 404.32074 80.009758 404.32074 73.985367 c
404.32074 59.820732 400.62073 49.040245 393.22318 41.643902 c
393.22318 41.643902 l
h
371.42438 42.436584 m
378.21463 42.436584 383.3866 45.314632 386.94147 51.076828 c
390.49268 56.836586 392.27194 64.473167 392.27194 73.985367 c
392.27194 78.210976 391.87317 82.253662 391.07806 86.113411 c
390.28049 89.970734 389.03415 93.351219 387.3378 96.259758 c
385.64145 99.165855 383.46585 101.46464 380.81342 103.15488 c
378.15976 104.84512 374.97684 105.69268 371.26584 105.69268 c
367.65732 105.69268 364.55365 104.87317 361.95486 103.23537 c
359.35367 101.59512 357.20486 99.351219 355.50977 96.496338 c
353.81219 93.643906 352.56586 90.287804 351.77072 86.430489 c
350.97318 82.570732 350.57684 78.424393 350.57684 73.985367 c
350.57684 69.546341 350.97318 65.424393 351.77072 61.619511 c
352.56586 57.814632 353.78537 54.485367 355.42926 51.630489 c
357.0744 48.778049 359.22195 46.531708 361.87439 44.893902 c
364.5256 43.253658 367.70853 42.436584 371.42438 42.436584 c
371.42438 42.436584 l
h
371.42438 42.436584 m
W*
0 0 885 200 rc
333.52805 119.88659 m
409.32074 119.88659 l
409.32074 28.241463 l
333.52805 28.241463 l
h
f
Q
q
320.45609 109.18536 m
320.45609 112.37317 320.0061 115.53658 319.10489 118.67317 c
318.20245 121.80854 316.71951 124.62805 314.65366 127.12561 c
312.58414 129.62195 309.93414 131.61586 306.70123 133.10487 c
303.46951 134.5939 299.5744 135.33902 295.01706 135.33902 c
286.00488 135.33902 279.03781 131.36829 274.10733 123.42683 c
269.17804 115.48537 266.71341 104.2122 266.71341 89.601219 c
266.71341 74.884148 269.24878 63.580486 274.32196 55.693901 c
279.39511 47.807316 286.5817 43.863415 295.88416 43.863415 c
305.28903 43.863415 314.80243 48.036587 324.41953 56.387806 c
327.69513 54.485367 329.91464 51.841465 331.07806 48.460976 c
326.64026 43.914635 321.16953 40.242683 314.66953 37.442684 c
308.16953 34.643902 301.27438 33.241463 293.98172 33.241463 c
286.89877 33.241463 280.82196 34.696342 275.74878 37.599998 c
270.67682 40.506096 266.52805 44.497562 263.30365 49.570732 c
260.07925 54.643902 257.70123 60.534145 256.17075 67.247559 c
254.6378 73.958534 253.87195 81.119514 253.87195 88.729271 c
253.87195 98.134148 254.92683 106.37926 257.04147 113.46098 c
259.15488 120.54025 262.06097 126.43293 265.76221 131.1378 c
269.45975 135.83902 273.79269 139.38171 278.76221 141.75975 c
283.72806 144.1378 289.06586 145.32683 294.77438 145.32683 c
300.48172 145.32683 305.65854 144.47926 310.31097 142.78903 c
314.96097 141.09879 318.92438 138.87805 322.20123 136.13049 c
325.47562 133.38292 328.01221 130.21097 329.80975 126.61951 c
331.60611 123.02439 332.50488 119.32683 332.50488 115.52195 c
332.50488 110.76585 330.26221 108.38659 325.77805 108.38659 c
324.31708 108.38659 322.54269 108.65244 320.45609 109.18536 c
W*
0 0 885 200 rc
248.87195 150.32683 m
337.50488 150.32683 l
337.50488 28.241463 l
248.87195 28.241463 l
h
f
Q
0.65100002 0 0 sc
q
235.73903 124.10366 m
235.06097 139.64635 228.45366 154.92928 216.07683 166.26952 c
210 171.8378 203.09634 175.93536 195.80367 178.58537 c
188.51341 181.24268 180.59268 182.54146 172.35732 182.1817 c
155.5878 181.45 140.70244 173.99025 130.19147 162.51952 c
119.68171 151.05 113.59634 137.42928 114.27927 118.80122 c
116.13659 68.145119 136.10609 14.565854 136.10609 14.565854 c
136.10609 14.565854 185.8439 42.77317 219.82683 80.384148 c
232.32439 94.215851 236.41829 108.56219 235.73903 124.10366 c
235.73903 124.10366 l
h
192.13536 114.97317 m
188.67683 105.47073 178.16951 100.57073 168.66829 104.02927 c
159.16585 107.48781 154.26585 117.99512 157.7244 127.49756 c
161.18292 136.99878 171.69025 141.89877 181.19269 138.44025 c
190.69513 134.9817 195.5939 124.47439 192.13536 114.97317 c
192.13536 114.97317 l
h
192.13536 114.97317 m
W*
0 0 885 200 rc
109.22728 187.24062 m
240.81027 187.24062 l
240.81027 9.5658541 l
109.22728 9.5658541 l
h
f
Q
0.70200002 0.071000002 0.071000002 sc
q
123.15488 176.33658 m
110.94634 189.65976 93.656097 198.32439 74.176826 199.17561 c
64.610977 199.59268 55.409756 198.08415 46.941463 194.99756 c
38.471951 191.91829 30.452438 187.15976 23.393902 180.69269 c
9.0182924 167.51952 1.3439025 149.76707 0.55487806 131.71463 c
-0.23292683 113.66097 4.5219512 96.997559 19.037806 80.931709 c
58.512196 37.243904 116.28415 4.4804878 116.28415 4.4804878 c
116.28415 4.4804878 139.48048 66.714638 141.6378 125.55366 c
142.43048 147.19269 135.3622 163.01341 123.15488 176.33658 c
123.15488 176.33658 l
h
78.462196 108.39634 m
67.424393 104.37926 55.22073 110.07073 51.203659 121.10732 c
47.186584 132.14513 52.876831 144.34879 63.914635 148.36708 c
74.951218 152.38414 87.156097 146.69269 91.173172 135.6561 c
95.190247 124.61829 89.498779 112.41463 78.462196 108.39634 c
78.462196 108.39634 l
h
78.462196 108.39634 m
W*
0 0 885 200 rc
-4.5276465 204.2438 m
146.6981 204.2438 l
146.6981 -0.51951218 l
-4.5276465 -0.51951218 l
h
f
Q
0.50199997 0 0 sc
q
141.6378 125.55366 m
142.20976 141.14999 138.68048 153.71341 132.10243 164.50853 c
131.45244 163.85976 130.81342 163.19756 130.19147 162.51952 c
119.68171 151.05 113.59634 137.42928 114.27927 118.80122 c
115.31464 90.563416 121.97683 61.421951 127.67195 41.154877 c
133.88292 64.269516 140.53049 95.357315 141.6378 125.55366 c
W*
0 0 885 200 rc
109.22728 169.50853 m
146.69798 169.50853 l
146.69798 36.154877 l
109.22728 36.154877 l
h
f
ep
end
